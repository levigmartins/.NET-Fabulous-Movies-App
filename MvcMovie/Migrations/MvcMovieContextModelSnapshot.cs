// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MvcMovie.Migrations
{
    [DbContext(typeof(MvcMovieContext))]
    partial class MvcMovieContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("MovieRent", b =>
                {
                    b.Property<int>("moviesMovieID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("rentsRentID")
                        .HasColumnType("INTEGER");

                    b.HasKey("moviesMovieID", "rentsRentID");

                    b.HasIndex("rentsRentID");

                    b.ToTable("MovieRent");
                });

            modelBuilder.Entity("MvcMovie.Models.Comment", b =>
                {
                    b.Property<int>("CommentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("MovieID")
                        .HasColumnType("TEXT");

                    b.Property<int?>("MovieID1")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserID")
                        .HasColumnType("TEXT");

                    b.Property<string>("description")
                        .HasColumnType("TEXT");

                    b.Property<string>("title")
                        .HasColumnType("TEXT");

                    b.HasKey("CommentID");

                    b.HasIndex("MovieID1");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("MvcMovie.Models.Movie", b =>
                {
                    b.Property<int>("MovieID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("genre")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("price")
                        .HasColumnType("money");

                    b.Property<float>("rate")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("releaseDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("title")
                        .HasColumnType("TEXT");

                    b.HasKey("MovieID");

                    b.ToTable("Movie");
                });

            modelBuilder.Entity("MvcMovie.Models.Rent", b =>
                {
                    b.Property<int>("RentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("price")
                        .HasColumnType("money");

                    b.Property<DateTime>("rentEndDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("rentStartDate")
                        .HasColumnType("TEXT");

                    b.HasKey("RentID");

                    b.ToTable("Rent");
                });

            modelBuilder.Entity("MovieRent", b =>
                {
                    b.HasOne("MvcMovie.Models.Movie", null)
                        .WithMany()
                        .HasForeignKey("moviesMovieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MvcMovie.Models.Rent", null)
                        .WithMany()
                        .HasForeignKey("rentsRentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MvcMovie.Models.Comment", b =>
                {
                    b.HasOne("MvcMovie.Models.Movie", null)
                        .WithMany("comments")
                        .HasForeignKey("MovieID1");
                });

            modelBuilder.Entity("MvcMovie.Models.Movie", b =>
                {
                    b.Navigation("comments");
                });
#pragma warning restore 612, 618
        }
    }
}
